{"version":3,"sources":["components/Ui/Button.jsx","components/Header/HeaderForm.jsx","components/Header/Header.jsx","components/Films/Film.jsx","components/Films/Films.jsx","components/Ui/GlobalStyle.jsx","App.jsx","index.jsx"],"names":["Btn","styled","button","Button","children","className","type","onClick","FormWrapper","form","Input","input","Textarea","textarea","Footer","footer","Error","p","HeaderForm","hideForm","onAddFilm","isAdded","useState","error","setError","titleRef","useRef","descRef","directorRef","producerRef","dateRef","submitFormHandler","event","preventDefault","current","value","length","dataFromForm","title","desc","director","producer","date","place","htmlFor","name","id","ref","cols","rows","Wrapper","div","ButtonsArea","section","Instruction","Header","content","onFetchFilms","onFetchFilmsDB","onAddFilmHandler","isClicked","setIsClicked","LiWrapper","li","Title","h2","Description","Film","UlWrapper","ul","Films","listOfFilms","map","element","GlobalStyle","createGlobalStyle","P","App","console","log","films","setFilms","isLoading","setIsLoading","setIsAdded","fetchFilmsHandlerAPI","useCallback","a","fetch","response","ok","json","data","updateFilmsDataAPI","results","filmData","episode_id","opening_crawl","release_date","message","fetchFilmsHandlerFireBase","key","updateFilmsDataDB","push","useEffect","addFilmHandler","filmsFromForm","method","body","JSON","stringify","headers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d475c65.chunk.js","sourcesContent":["import React from 'react';\n\nimport styled from 'styled-components';\n\nconst Btn = styled.button`\n  width: 150px;\n  background: brown;\n  color: white;\n  border: none;\n  border-radius: 1em;\n  margin-left: 1em;\n  margin-top: 1em;\n  padding: 1em;\n  cursor: pointer;\n  outline: none;\n  transition: background-color 0.5s;\n\n  &:hover {\n    background: #7c1919;\n  }\n  &:focus {\n    background: #7c1919;\n  }\n`;\n\nconst Button = ({ children, className, type, onClick }) => (\n  <Btn className={className} type={type || 'button'} onClick={onClick}>\n    {children}\n  </Btn>\n);\n\nexport default Button;\n","import React, { Fragment, useRef, useState } from 'react';\n\nimport Button from '../Ui/Button';\n\nimport styled from 'styled-components';\n\nconst FormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  outline: none;\n  border: 1px solid #ff6347a4;\n  border-radius: 0.5em;\n  margin: 5px;\n  padding: 5px;\n  width: 20em;\n  cursor: pointer;\n\n  &:focus {\n    background: #ff63474c;\n  }\n`;\n\nconst Textarea = styled.textarea`\n  outline: none;\n  border: 1px solid #ff6347a4;\n  border-radius: 0.5em;\n  padding: 5px;\n  cursor: pointer;\n\n  &:focus {\n    background: #ff63474c;\n  }\n`;\n\nconst Footer = styled.footer`\n  margin-top: 1em;\n`;\n\nconst Error = styled.p`\n  color: red;\n`;\n\nconst HeaderForm = ({ hideForm, onAddFilm, isAdded }) => {\n  const [error, setError] = useState(false);\n  const titleRef = useRef('');\n  const descRef = useRef('');\n  const directorRef = useRef('');\n  const producerRef = useRef('');\n  const dateRef = useRef('');\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    setError(false);\n    if (\n      titleRef.current.value.length !== 0 &&\n      descRef.current.value.length !== 0 &&\n      directorRef.current.value.length !== 0 &&\n      producerRef.current.value.length !== 0 &&\n      dateRef.current.value.length !== 0\n    ) {\n      const dataFromForm = {\n        title: titleRef.current.value,\n        desc: descRef.current.value,\n        director: directorRef.current.value,\n        producer: producerRef.current.value,\n        date: dateRef.current.value,\n        place: 'From Data Base',\n      };\n      onAddFilm(dataFromForm);\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <FormWrapper>\n        <label htmlFor=\"in1\">title</label>\n        <Input type=\"text\" name=\"\" id=\"in1\" ref={titleRef} />\n        <label htmlFor=\"in2\">Description</label>\n        <Textarea name=\"\" id=\"in2\" cols=\"30\" rows=\"5\" ref={descRef}></Textarea>\n        <label htmlFor=\"in3\">Director</label>\n        <Input type=\"text\" name=\"\" id=\"in3\" ref={directorRef} />\n        <label htmlFor=\"in4\">Producer</label>\n        <Input type=\"text\" name=\"\" id=\"in4\" ref={producerRef} />\n        <label htmlFor=\"in5\">Date</label>\n        <Input type=\"text\" name=\"\" id=\"in5\" ref={dateRef} />\n      </FormWrapper>\n      <Footer>\n        <Button onClick={hideForm}>Back</Button>\n        {!isAdded && <Button onClick={submitFormHandler}>Add new film</Button>}\n        {isAdded && <Button onClick={submitFormHandler}>Adding new film...</Button>}\n        {error && <Error>input/inputs are blank</Error>}\n      </Footer>\n    </Fragment>\n  );\n};\n\nexport default HeaderForm;\n","import React, { useState } from 'react';\n\nimport HeaderForm from './HeaderForm';\nimport Button from '../Ui/Button';\n\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80%;\n  align-items: center;\n  background: white;\n  border-radius: 1em;\n  padding: 1em;\n`;\n\nconst ButtonsArea = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst Instruction = styled.p`\n  color: #0000006f;\n  border-bottom: 1px solid #0000006f;\n`;\n\nconst Header = ({ onFetchFilms, onFetchFilmsDB, onAddFilmHandler, isAdded }) => {\n  const [isClicked, setIsClicked] = useState(false);\n\n  const onAddFilm = (dataFromForm) => {\n    onAddFilmHandler(dataFromForm);\n  };\n\n  const hideFormHandler = () => {\n    setIsClicked(false);\n  };\n\n  let content;\n\n  if (isClicked) {\n    content = (\n      <HeaderForm\n        hideForm={hideFormHandler}\n        onAddFilm={onAddFilm}\n        isAdded={isAdded}\n      />\n    );\n  } else {\n    content = (\n      <ButtonsArea>\n        <Button onClick={onFetchFilms}>Fetch films from API</Button>\n        <Button onClick={onFetchFilmsDB}>Fetch films from DB</Button>\n        <Button onClick={() => setIsClicked(true)}>Add new film to DB</Button>\n      </ButtonsArea>\n    );\n  }\n\n  return (\n    <Wrapper>\n      {!isClicked && <Instruction>Click for fetch films or add new one</Instruction>}\n      {content}\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nconst LiWrapper = styled.li`\n  background: tomato;\n  border-radius: 1em;\n  padding: 2em;\n  margin-top: 2em;\n  width: 80%;\n`;\n\nconst Title = styled.h2`\n  color: white;\n  font-weight: bold;\n  font-size: 40px;\n`;\n\nconst Footer = styled.footer`\n  background: white;\n  border-radius: 0.5em;\n  padding: 0.5em;\n  font-size: 12px;\n`;\n\nconst Description = styled(Footer)`\n  text-align: start;\n  font-size: 15px;\n  margin-bottom: 0.2em;\n`;\n\nconst Film = ({ title, desc, producer, date, director, place }) => {\n  return (\n    <LiWrapper>\n      <p>{place}</p>\n      <Title>{title}</Title>\n      <Description>{desc}</Description>\n      <Footer>\n        <p>{`Director: ${director}`}</p>\n        <p>{`Producers: ${producer}`}</p>\n        <p>{`Date: ${date}`}</p>\n      </Footer>\n    </LiWrapper>\n  );\n};\n\nexport default Film;\n","import React from 'react';\n\nimport Film from './Film';\n\nimport styled from 'styled-components';\n\nconst UlWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 1em;\n  background: white;\n  border-radius: 1em;\n  width: 80%;\n  padding: 1em;\n  list-style: none;\n`;\n\nconst Films = ({ listOfFilms }) => {\n  return (\n    <UlWrapper>\n      {listOfFilms.map((element) => {\n        return (\n          <Film\n            key={element.id}\n            title={element.title}\n            desc={element.desc}\n            director={element.director}\n            producer={element.producer}\n            date={element.date}\n            place={element.place}\n          />\n        );\n      })}\n    </UlWrapper>\n  );\n};\n\nexport default Films;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n* {\n  font-family: \"Open Sans\", sans-serif;\n}\nbody {\n    text-align: center;\n    margin: 0;\n    padding: 0;\n    background: #41403f;\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { Fragment, useEffect, useState, useCallback } from 'react';\n\nimport Header from './components/Header/Header';\nimport Films from './components/Films/Films';\n//import { ExampleMovies } from './components/Films/ExampleMovies';\n\nimport GlobalStyle from './components/Ui/GlobalStyle';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 1em;\n`;\n\nconst P = styled.p`\n  background: white;\n  padding: 1em;\n  color: tomato;\n  font-size: 20px;\n  border-radius: 0.5em;\n`;\n\nfunction App() {\n  console.log('component running');\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isAdded, setIsAdded] = useState(false);\n\n  const fetchFilmsHandlerAPI = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    setFilms([]);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n\n      if (!response.ok) {\n        throw new Error('something went wrong !!!');\n      }\n\n      const data = await response.json();\n\n      const updateFilmsDataAPI = data.results.map((filmData) => {\n        return {\n          id: filmData.episode_id,\n          title: filmData.title,\n          desc: filmData.opening_crawl,\n          director: filmData.director,\n          producer: filmData.producer,\n          date: filmData.release_date,\n          place: 'From Star Wars API',\n        };\n      });\n      setFilms(updateFilmsDataAPI);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  const fetchFilmsHandlerFireBase = async () => {\n    setIsLoading(true);\n    setError(null);\n    setFilms([]);\n\n    try {\n      const response = await fetch(\n        'https://react-httprequest-d5649-default-rtdb.europe-west1.firebasedatabase.app/films.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('something went wrong !!!');\n      }\n\n      const data = await response.json();\n      console.log(data);\n\n      const updateFilmsDataDB = [];\n\n      for (const key in data) {\n        updateFilmsDataDB.push({\n          id: key,\n          title: data[key].title,\n          desc: data[key].desc,\n          director: data[key].director,\n          producer: data[key].producer,\n          date: data[key].date,\n          place: data[key].place,\n        });\n      }\n      setFilms(updateFilmsDataDB);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchFilmsHandlerAPI();\n  }, [fetchFilmsHandlerAPI]);\n\n  const addFilmHandler = async (filmsFromForm) => {\n    setIsAdded(true);\n    const response = await fetch(\n      'https://react-httprequest-d5649-default-rtdb.europe-west1.firebasedatabase.app/films.json/',\n      {\n        method: 'POST',\n        body: JSON.stringify(filmsFromForm),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n    setIsAdded(false);\n  };\n\n  let content;\n\n  if (films.length > 0 && !isLoading) {\n    content = <Films listOfFilms={films} />;\n  } else if (error) {\n    content = <P>{error}</P>;\n  } else if (isLoading) {\n    content = <P>Loading...</P>;\n  } else content = <P>0 films found</P>;\n\n  return (\n    <Fragment>\n      <GlobalStyle />\n      <Wrapper>\n        <Header\n          onFetchFilms={fetchFilmsHandlerAPI}\n          onFetchFilmsDB={fetchFilmsHandlerFireBase}\n          onAddFilmHandler={addFilmHandler}\n          isAdded={isAdded}\n        />\n      </Wrapper>\n      <Wrapper>{content}</Wrapper>\n    </Fragment>\n  );\n}\n\nexport default App;\n\n// alternative way\n/*\n{!isLoading && films.length > 0 && <Films listOfFilms={films} />}\n{!isLoading && films.length === 0 && !error && <P>0 films found</P>}\n{!isLoading && error && <P>{error}</P>}\n{isLoading && <P>Loading...</P>}\n*/\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}